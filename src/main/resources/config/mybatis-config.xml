<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">

<!-- 这是mybatis的核心配置文件，这里采取的是官网的简单做法 -->
<configuration>

    <!--属性定义，之后便可以被其它地方引用，语法：${}-->
    <properties>
        <property name="driver" value="com.mysql.jdbc.Driver"/>
        <!--如果加上参数useAffectedRows=true，则update与delete语句返回的是实际受影响的行数，而不是默认的匹配到的行数
        jdbc:mysql://localhost:3306/mybatis?useAffectedRows=true-->
        <property name="url" value="jdbc:mysql://localhost:3316/mybatis?useAffectedRows=true"/>
        <property name="username" value="root"/>
        <property name="password" value="root"/>
    </properties>

    <!--别名定义-->
    <typeAliases>
        <typeAlias type="com.miaxis.entity.Single" alias="Single"/>
    </typeAliases>

    <!--类型转换器-->
    <typeHandlers>
        <typeHandler handler="com.miaxis.typehandler.VarCharToStringTypeHandler"/>

        <!--自动扫描并注册某个包下的类型转换器-->
        <!--<package name="com.miaxis.typehandler"/>-->
    </typeHandlers>

    <!--注意，顺序有讲究，必须在environments标签之前-->
    <plugins>
        <!--引入mybatis的分页拦截器-->
        <plugin interceptor="com.github.pagehelper.PageInterceptor"></plugin>
    </plugins>

    <environments default="development">
        <environment id="development">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${driver}"/>
                <property name="url" value="${url}"/>
                <property name="username" value="${username}"/>
                <property name="password" value="${password}"/>
            </dataSource>
        </environment>
    </environments>

    <!--用来引入mapper路径或者映射器接口-->
    <mappers>
        <!--相对于类路径，即这里的src/main/resources-->

        <!--1. 使用相对于类路径的资源引用，即使用xml文件的方式-->
        <mapper resource="config/BlogMapper.xml"/>
        <mapper resource="config/AuthorMapper.xml"/>
        <mapper resource="config/BlogChildMapper.xml"/>
        <mapper resource="config/SingleMapper.xml"/>

        <!--2. 使用映射器接口实现类的完全限定类名，即使用接口注解的方式
            注意，上面引入了config/SingleMapper.xml，说明xml方式和接口方式可以同时引入使用，
            实践证明，两者会被合并，所以：不要在两者中定义相同的方法，否则会报错，见SingleMapper接口中的totalCount方法
         -->
        <mapper class="com.miaxis.mapper.SingleMapper"/>

        <!--注意，如果删除了mbg生成的各种文件，记得这里注释一下-->
        <mapper class="mapper.BlogMapper"/>

        <!--3. 将包内的映射器接口实现全部注册为映射器，即此包下的所有接口都会被自动注册，是上述2的简化写法，不适应于mapper文件的引入 -->
        <!--<package name="com.xxx"/>-->

    </mappers>

</configuration>