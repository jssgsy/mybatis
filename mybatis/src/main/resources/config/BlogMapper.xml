<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="BlogMapper">

<resultMap id="BlogMap" type="com.miaxis.entity.Blog" >
	<id column="b_id" jdbcType="INTEGER" property="id"/>
	<result column="title" jdbcType="VARCHAR" property="title"/><!-- 不写此句则title属性的值为null，看来所有的映射都需要显示的手动转换 -->
	<result column="content" jdbcType="VARCHAR" property="content"/>

	<!--<result column="name" jdbcType="VARCHAR" property="author.name" />-->
	<!--下面的association标签可以使用上面的result标签替换。-->
	<association property="author" javaType="com.miaxis.entity.Author">
	<!-- 这里和collection加一个resultMap属性不同（虽然也可以，可以达到复用的目的） -->
		<id  column="a_id" property="id"/>
		<result column="name" property="name"/>
	</association>
</resultMap>

<!-- 根据id获得单条blog记录 -->
<select id="selectBlogById" resultType="com.miaxis.entity.Blog" >
	select * from blog where id = #{id}
</select>

<!-- 根据某个blog获取其所属的author -->
<select id="selectBlogAuthorById" resultMap="BlogMap">
	select b.id b_id,b.title,b.content,a.id a_id,a.name as name from blog b,author a where b.author_id=a.id and b.id = #{id}
</select>

<!-- 根据id删除单条记录 -->
<delete id="deleteById"> <!-- 传进来的id是简单类型，不需要利用parameterType指定 -->
	delete from blog where id = #{id}
</delete>

<!-- 更新某个blog -->
<update id="update" parameterType="com.miaxis.entity.Blog"><!-- 传进来的是对象，需要利用parameterType指定 -->
	update blog set title = #{title} where id = #{id}
</update>

<!-- 新增单个blog -->
<insert id="add" parameterType="com.miaxis.entity.Blog">
	insert into blog(title,content) values(#{title},#{content})
</insert>












</mapper>